import { Request, Response } from 'express';
import { <%= props.Service %> } from './<%= props.Service %>';
import { ApplicationExceptionController } from './../../../../core/ApplicationExceptionController';


export class <%= props.Controller %> {

  private service: <%= props.Service %>;
  private exceptionController: ApplicationExceptionController;

  constructor(props: {
    service: <%= props.Service %>;
    exceptionController: ApplicationExceptionController
  }) {
    this.service = props.service;
    this.exceptionController = props.exceptionController;
  }

  async handle(request: Request, response: Response) {
    try {   

      const <%= props.Module %> = await this.service.execute({} as any);


      return response.status(200).json(<%= props.Module %>);
    } catch (error) {
      return this.exceptionController.handle(response, error)
    }
  }
}
